
import random
from time import sleep


def inicio() -> None:
    print('''
MMMMMMMMM        MMMMMMMMMMMM              MMMMMMMMMMMM             MMMMMMMMMMMMMMMM    MMMM             MMMMMMMMMMMM                 ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£§‚£§       
MMMM   MMMM      MMMMM   MMMM             MMMM MMMM MMMM            MMMMMMMMMMMMMMMM    MMMM            MMMM MMMM MMMM                    ‚¢∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
MMMM    MMMM    MMMM     MMMM            MMMM        MMMM           MMMM                MMMM           MMMM        MMMM                  ‚†Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
MMMM      MMM  MMM       MMMM           MMMM          MMMM          MMMM                MMMM          MMMM          MMMM                ‚††‚†æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†ã‚†â
MMMM        MMM          MMMM          MMMM            MMMM         MMMMMMMMMM          MMMM         MMMM            MMMM  ‚†Ä             ‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚¢†‚£ø‚°Ä‚†Ä‚†Ä‚¢π‚°ü
MMMM         M           MMMM         MMMM    MMMMMMM   MMMM        MMMMMMMMMM          MMMM        MMMM    MMMMMMM   MMMM             ‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£Ä‚£Ä‚£ô‚£Ç‚£†‚†º‚†É‚†Ä
MMMM                     MMMM        MMMM MMMMMMMMMMMMMM MMMM       MMMM                MMMM       MMMM MMMMMMMMMMMMMM MMMM              ‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Å‚†Ä
MMMM                     MMMM       MMMM                  MMMM      MMMM                MMMM      MMMM                  MMMM            ‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä
MMMM                     MMMM      MMMM                    MMMM     MMMM                MMMM     MMMM                    MMMM           ‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á
MMMM                     MMMM     MMMM                      MMMM    MMMM                MMMM    MMMM                      MMMM           ‚†õ‚†õ‚†õ‚†õ‚†ª‚†ø‚†õ‚†É
          ''')
    sleep(0.25)
    print("\nBem-vindo ao jogo M√°fia! üïµ  üî™ ü©∏") 
    sleep(0.25)
    explicacao = input("Gostaria de uma explica√ß√£o antes de iniciar o jogo?\nResponda com 'Sim' ou 'N√£o': ").strip().lower()
    if explicacao in ['s', 'sim']:
        explicacao()
    else:
        sleep(0.25)    
        print("J√° que voc√™ n√£o precisa de mais explica√ß√µes... Vamos ao jogo!")

def explicacao() -> None:
    mensagens = [
        "\nH√° nesta cidade um terr√≠vel assassino... Ele busca assassinar todos os jogadores a sangue frio\ne causar disc√≥rdia entre os moradores da cidade\n",
        "H√° um narrador que dar√° informa√ß√µes durante todo o jogo. Logo no in√≠cio s√ßao distribu√≠dos pap√©is entre os jogadores.\nOs pap√©is s√£o:\nMafioso\nM√©dico\nXerife\nCidad√£o\n\n",
        "Ap√≥s a distribui√ß√£o dos pap√©is o jogo come√ßa...\n\n",
        "Existem tr√™s pap√©is que podem agir durante a noite: o assassino, o m√©dico e o xerife.\nO assassino escolher√° algu√©m para eliminar durante a noite. Ap√≥s ele, o m√©dico age para proteger algu√©m durante a noite.\n",
        "Caso o protegido do m√©dico coincida com a pessoa que o mafioso tentou assassinar durante a noite, esta pessoa continuar√° s√£ e salva.\n",
        "O xerife age depois investigando quem ele acha que √© o assassino.\nO narrador dir√° se ele est√° certo ou n√£o...\n",
        "O narrador ditar√° quando a cidade amanhecer. Quando isso ocorrer, todas os cidad√£os se reunir√£o para tentar achar o assassino.\nPara isso, ocorrer√° uma discuss√£o e posteriormente uma vota√ß√£o para eliminar algu√©m. \n",
        "O acusado pode tentar se defender e ap√≥s a sua defesa, os jogadores decidem se ele √© culpado ou n√£o.\n",
        "Caso decidam elimin√°-lo e ele for o assassino, o jogo termina com vit√≥ria da Cidade!\n",
        "Caso decidam elimin√°-lo e ele n√£o for o assassino... Mais uma noite chega e o assassino ir√° agir.\n",
        "Se n√£o decidirem eliminar o jogador, mais uma discuss√£o ocorre at√© que algu√©m seja escolhido para morrer.\n",
        "O jogo termina com a vit√≥ria da Cidade ou do Mafioso! Boa sorte e bom jogo!!\n"
    ]
    for msg in mensagens:
        sleep(1.5)
        print(msg)

    
def mensagem_fim_de_jogo(vitoria: bool):
    '''Caso seja vit√≥ria da Cidade, exibe que foi vit√≥ria dos jogadores. Caso seja vit√≥ria do mafioso, foi derrota dos jogadores.'''
    print("\n" + "*" * 50)
    
    if vitoria:
        print("\n" + " " * 10 + "PARAB√âNS! VOC√äS VENCERAM!".center(50))
    else:
        print("\n" + " " * 10 + "VOC√äS PERDERAM. TENTE NOVAMENTE!".center(50))
    
    print("\n" + "*" * 50 + "\n")




def mensagem_de_rodada(rodada: int) -> None:
    '''Fun√ß√£o feita apenas para exibir na tela a mensagem de qual rodada est√° come√ßando.
       Feita para dividir a fun√ß√£o principal 'jogar' em v√°rias subfun√ß√µes.'''
    print("\n" + "=" * 40)
    print(f"::: In√≠cio da Rodada {rodada} :::")
    print("=" * 40 + "\n")




def mensagem_morte_npc(morto: int) -> None:
    """Exibe uma mensagem aleat√≥ria sobre a morte de um NPC."""
    frases_morte = [
        f"Nesta √∫ltima madrugada, o Jogador {morto} foi assassinado no local de trabalho.",
        f"Na noite passada, o Jogador {morto} foi encontrado morto dentro de sua casa.",
        f"Nesta noite, o assassino matou o Jogador {morto}."
    ]
    print(random.choice(frases_morte))
